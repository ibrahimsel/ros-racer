# MIT License

# Copyright (c) 2020 Hongrui Zheng

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Copyright (c) 2025 Composiv.ai
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Composiv.ai - initial API and implementation
#

####################
#   SHARED NETWORK #
####################
networks:
  racer-net:           # one bridge network to rule them all
    driver: bridge

####################
#     SERVICES     #
####################

############  SIM + VNC  ############
services:
  sim:
    build: ./
    volumes:
      - ./sim:/sim_ws/src/f1tenth_gym_ros
    environment:
      - DISPLAY=novnc:0.0
      - ROS_DOMAIN_ID=0
    stdin_open: true
    tty: true
    depends_on:
      novnc:
        condition: service_healthy
    networks: [racer-net]

  novnc:
    image: theasp/novnc:latest
    environment:
      - DISPLAY_WIDTH=1280
      - DISPLAY_HEIGHT=720
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks: [racer-net]

############  TELEMETRY BACK END  ############
  redis:
    image: redis:7-alpine
    networks: [racer-net]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 3s

  backend:
    build: ./src/rt-dashboard/server                 # FastAPI + Socket.IO
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks: [racer-net]

############  ROS --> REDIS BRIDGE  ############
  ros_to_redis:
    build:
      context: ./src/rt-dashboard/redis
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ROS_DOMAIN_ID: 0
    depends_on:
      - redis
      - sim
    networks: [racer-net]

############  FRONT END  ############
  frontend:
    build: ./src/rt-dashboard/frontend/realtime-dashboard
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks: [racer-net]
